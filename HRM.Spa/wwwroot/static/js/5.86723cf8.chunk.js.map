{"version":3,"sources":["../node_modules/devextreme/ui/context_menu.js","../node_modules/devextreme/ui/context_menu/ui.menu_base.js","../node_modules/devextreme/ui/context_menu/ui.context_menu.js","../node_modules/devextreme/ui/context_menu/ui.menu_base.edit.strategy.js"],"names":["module","exports","__webpack_require__","default","$","commonUtils","typeUtils","each","extend","inkRipple","HierarchicalCollectionWidget","MenuBaseEditStrategy","devices","ITEM_CLASS","DX_MENU_CLASS","DEFAULT_DELAY","show","hide","MenuBase","inherit","_getDefaultOptions","this","callBase","items","cssClass","activeStateEnabled","showSubmenuMode","name","delay","animation","type","from","to","duration","selectByClick","focusOnSelectedItem","keyExpr","_itemAttributes","role","useInkRipple","_activeStateUnit","_itemDataKey","_itemClass","_setAriaSelected","noop","_selectedItemClass","_widgetClass","_focusTarget","_itemContainer","_clean","option","_supportedKeys","space","$item","length","_isSelectionEnabled","selectItem","pageUp","pageDown","_init","_renderSelectedItem","_initActions","_getTextContainer","itemData","itemText","text","$itemContainer","addClass","itemContent","isPlainObject","String","_getPopoutContainer","$popOutContainer","$popOutImage","DX_MENU_ITEM_POPOUT_CLASS","append","_getDataAdapterOptions","rootValue","multipleSelection","recursiveSelection","recursiveExpansion","searchValue","_selectByItem","selectedItem","nodeToSelect","_dataAdapter","getNodeByItem","toggleSelection","internalFields","key","selectedKeys","getSelectedNodesKeys","selectedKey","node","getNodeByKey","selectable","item","_initMarkup","_addCustomCssClass","$element","_renderInkRipple","_inkRipple","render","_toggleActiveState","value","e","apply","arguments","config","element","event","showWave","hideWave","_getShowSubmenuMode","optionValue","isObject","_isDesktopDevice","_initSelectedItems","real","deviceType","_initEditStrategy","Strategy","_editStrategy","_itemWrapperSelector","_hoverStartHandler","$itemElement","_getItemElementByEventArgs","_isItemDisabled","stopPropagation","clearTimeout","_showSubmenusTimeout","setTimeout","_showSubmenu","bind","_getSubmenuDelay","_getAvailableItems","$itemElements","filter","css","_disabledGetter","data","_addExpandedClass","itemElement","action","isDefined","eventArgs","$target","target","hasClass","get","currentTarget","parent","_hoverEndHandler","_hasSubmenu","childrenKeys","_renderContentImpl","_renderItems","getRootNodes","nodes","submenuContainer","$nodeContainer","that","hasIcons","_renderContainer","firstVisibleIndex","nextGroupFirstIndex","index","isVisibleNode","visible","beginGroup","_renderSeparator","_renderItem","$wrapper","appendTo","_createDOMElement","$nodeElement","$itemFrame","$node","attr","setAria","_renderItemFrame","children","_refreshItem","_itemIndexKey","closest","_addContentClasses","hasText","hasIcon","icon","hasSubmenu","toggleClass","_getItemContent","$itemContent","_postprocessRenderItem","args","selectedIndex","_selectedGetter","_isItemSelectable","$itemsContainer","_itemClickHandler","_skipHandling","itemClickActionHandler","_createAction","_updateSubmenuVisibilityOnClick","_itemDXEventHandler","afterExecute","actionArgs","_updateSelectedItemOnClick","selectedItemKey","_isItemSelectionAllowed","selectedNode","_toggleItemSelection","_fireSelectionChangeEvent","_setOptionSilent","isSelectionByClickEnabled","_isContainerEmpty","_itemsGetter","is","_syncSelectionOptions","asyncNoop","_optionChanged","_updateSelectedItems","_invalidate","_getElementByItem","result","_itemElements","_","oldSelection","newSelection","_updateSelection","addedSelection","removedSelection","_createActionByOption","excludeValidators","addedItems","removedItems","nodeType","_getItemData","unselectItem","selected","domAdapter","eventsEngine","Guid","registerComponent","domUtils","contains","getPublicElement","inArray","windowUtils","fx","positionUtils","eventUtils","Overlay","Deferred","ACTIONS","LOCAL_SUBMENU_DIRECTIONS","ContextMenu","getShowEvent","showEvent","closeOnOutsideClick","position","at","my","onShowing","onShown","onSubmenuCreated","onHiding","onHidden","onPositioning","submenuDirection","onLeftFirstItem","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","_defaultOptionsRules","concat","device","hasWindow","options","_actions","_setOptionsByReference","_optionsByReference","_focusInHandler","_overlay","$content","_eventBindingTarget","itemsContainer","esc","_getActiveItem","$items","$focusedItem","$hoveredItem","find","_moveFocus","location","$newTarget","_getItemsByLocation","$oldTarget","$activeItemHighlighted","_prevItem","first","_nextItem","last","_hideSubmenuHandler","_expandSubmenuHandler","$activeItem","_getAriaTarget","_refreshActiveDescendant","id","getFocusedItemId","$curItem","$parentItem","parents","_hideSubmenusOnSameLevel","_hideSubmenu","isItemHasSubmenu","$submenu","remove","_detachShowContextMenuEvents","_getTarget","_render","_renderVisibility","_addWidgetClass","_attachShowContextMenuEvents","_attachKeyboardEvents","_keyboardProcessor","_renderContextMenuOverlay","$overlayContent","overlayOptions","_getOverlayOptions","$overlayElement","_createComponent","_$element","_addPlatformDependentClass","_attachContextMenuEvent","_itemContextMenuHandler","current","phone","eventName","addNamespace","NAME","_showContextMenuEventHandler","off","getDocument","handler","contextMenuAction","getShowDelay","_show","validatingTargetName","isRenderer","isWindow","on","_renderDimensions","$holder","_renderSubmenuItems","_getChildNodes","submenuElement","overlayAnimation","focusStateEnabled","innerOverlay","_closeOnOutsideClickHandler","propagateOutsideClick","closeOnTargetScroll","deferRendering","of","collision","shading","showTitle","height","width","_overlayShownActionHandler","_overlayHidingActionHandler","_overlayHiddenActionHandler","arg","cancel","_hideAllShownSubmenus","$clickedItem","$activeItemContainer","$itemContainers","$rootItem","isRootItemClicked","isFunction","isDocument","_getActiveItemsContainer","_getItemsContainers","_searchActiveItem","_isIncludeOverlay","_hideAllShownChildSubmenus","_$content","eq","$activeOverlay","$allOverlays","isSame","$overlay","$context","$submenuElements","shownSubmenus","_shownSubmenus","context","isSubmenuRendered","_isSubmenuVisible","_drawSubmenu","$expandedItems","siblings","removeClass","DX_MENU_ITEM_CLASS","_hideSubmenuGroup","_hideSubmenuCore","submenuPosition","_getSubmenuPosition","push","stop","setup","_animate","$container","animate","toLowerCase","offset","h","v","notCloseMenuOnItemClick","closeMenuOnClick","disabled","$prevSubmenu","canceled","$curSubmenu","splice","_stopAnimate","_visibilityChanged","previousValue","showing","_hide","_toggleVisibility","jQEvent","promise","reject","_positionContextMenu","_renderFocusState","_attachHoverEvents","_attachClickEvent","_getContextMenuPosition","isInitialPosition","_isInitialOptionValue","positioningAction","preventDefault","removeAttr","toggle","_typeof","Symbol","iterator","obj","constructor","prototype","map","_getPlainItems","_collectionWidget","getMenuItems","_stringifyItem","JSON","stringify","_getTemplateString","template","toString"],"mappings":"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","file":"static/js/5.86723cf8.chunk.js","sourcesContent":["/**\r\n * DevExtreme (ui/context_menu.js)\r\n * Version: 19.1.4\r\n * Build date: Mon Jun 17 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nmodule.exports = require(\"./context_menu/ui.context_menu\");\nmodule.exports.default = module.exports;","/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.js)\r\n * Version: 19.1.4\r\n * Build date: Mon Jun 17 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\"),\n    commonUtils = require(\"../../core/utils/common\"),\n    typeUtils = require(\"../../core/utils/type\"),\n    each = require(\"../../core/utils/iterator\").each,\n    extend = require(\"../../core/utils/extend\").extend,\n    inkRipple = require(\"../widget/utils.ink_ripple\"),\n    HierarchicalCollectionWidget = require(\"../hierarchical_collection/ui.hierarchical_collection_widget\"),\n    MenuBaseEditStrategy = require(\"./ui.menu_base.edit.strategy\"),\n    devices = require(\"../../core/devices\");\n\nvar DX_MENU_CLASS = \"dx-menu\",\n    DX_MENU_NO_ICONS_CLASS = DX_MENU_CLASS + \"-no-icons\",\n    DX_MENU_BASE_CLASS = \"dx-menu-base\",\n    ITEM_CLASS = DX_MENU_CLASS + \"-item\",\n    DX_ITEM_CONTENT_CLASS = ITEM_CLASS + \"-content\",\n    DX_MENU_SELECTED_ITEM_CLASS = ITEM_CLASS + \"-selected\",\n    DX_MENU_ITEM_WRAPPER_CLASS = ITEM_CLASS + \"-wrapper\",\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\n    DX_MENU_ITEM_EXPANDED_CLASS = ITEM_CLASS + \"-expanded\",\n    DX_MENU_SEPARATOR_CLASS = DX_MENU_CLASS + \"-separator\",\n    DX_MENU_ITEM_LAST_GROUP_ITEM = DX_MENU_CLASS + \"-last-group-item\",\n    DX_ITEM_HAS_TEXT = ITEM_CLASS + \"-has-text\",\n    DX_ITEM_HAS_ICON = ITEM_CLASS + \"-has-icon\",\n    DX_ITEM_HAS_SUBMENU = ITEM_CLASS + \"-has-submenu\",\n    DX_MENU_ITEM_POPOUT_CLASS = ITEM_CLASS + \"-popout\",\n    DX_MENU_ITEM_POPOUT_CONTAINER_CLASS = DX_MENU_ITEM_POPOUT_CLASS + \"-container\",\n    DX_MENU_ITEM_CAPTION_CLASS = ITEM_CLASS + \"-text\",\n    SINGLE_SELECTION_MODE = \"single\",\n    DEFAULT_DELAY = {\n  show: 50,\n  hide: 300\n};\nvar MenuBase = HierarchicalCollectionWidget.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      items: [],\n      cssClass: \"\",\n      activeStateEnabled: true,\n      showSubmenuMode: {\n        name: \"onHover\",\n        delay: {\n          show: 50,\n          hide: 300\n        }\n      },\n      animation: {\n        show: {\n          type: \"fade\",\n          from: 0,\n          to: 1,\n          duration: 100\n        },\n        hide: {\n          type: \"fade\",\n          from: 1,\n          to: 0,\n          duration: 100\n        }\n      },\n      selectByClick: false,\n      focusOnSelectedItem: false,\n      keyExpr: null,\n      _itemAttributes: {\n        role: \"menuitem\"\n      },\n      useInkRipple: false\n    });\n  },\n  _activeStateUnit: \".\" + ITEM_CLASS,\n  _itemDataKey: function _itemDataKey() {\n    return \"dxMenuItemDataKey\";\n  },\n  _itemClass: function _itemClass() {\n    return ITEM_CLASS;\n  },\n  _setAriaSelected: commonUtils.noop,\n  _selectedItemClass: function _selectedItemClass() {\n    return DX_MENU_SELECTED_ITEM_CLASS;\n  },\n  _widgetClass: function _widgetClass() {\n    return DX_MENU_BASE_CLASS;\n  },\n  _focusTarget: function _focusTarget() {\n    return this._itemContainer();\n  },\n  _clean: function _clean() {\n    this.option(\"focusedElement\", null);\n    this.callBase();\n  },\n  _supportedKeys: function _supportedKeys() {\n    var selectItem = function selectItem() {\n      var $item = $(this.option(\"focusedElement\"));\n\n      if (!$item.length || !this._isSelectionEnabled()) {\n        return;\n      }\n\n      this.selectItem($item[0]);\n    };\n\n    return extend(this.callBase(), {\n      space: selectItem,\n      pageUp: commonUtils.noop,\n      pageDown: commonUtils.noop\n    });\n  },\n  _isSelectionEnabled: function _isSelectionEnabled() {\n    return this.option(\"selectionMode\") === SINGLE_SELECTION_MODE;\n  },\n  _init: function _init() {\n    this.callBase();\n\n    this._renderSelectedItem();\n\n    this._initActions();\n  },\n  _getTextContainer: function _getTextContainer(itemData) {\n    var itemText = itemData.text,\n        $itemContainer = $(\"<span>\").addClass(DX_MENU_ITEM_CAPTION_CLASS),\n        itemContent = typeUtils.isPlainObject(itemData) ? itemText : String(itemData);\n    return itemText && $itemContainer.text(itemContent);\n  },\n  _getPopoutContainer: function _getPopoutContainer(itemData) {\n    var $popOutContainer,\n        items = itemData.items;\n\n    if (items && items.length) {\n      var $popOutImage = $(\"<div>\").addClass(DX_MENU_ITEM_POPOUT_CLASS);\n      $popOutContainer = $(\"<span>\").addClass(DX_MENU_ITEM_POPOUT_CONTAINER_CLASS).append($popOutImage);\n    }\n\n    return $popOutContainer;\n  },\n  _getDataAdapterOptions: function _getDataAdapterOptions() {\n    return {\n      rootValue: 0,\n      multipleSelection: false,\n      recursiveSelection: false,\n      recursiveExpansion: false,\n      searchValue: \"\"\n    };\n  },\n  _selectByItem: function _selectByItem(selectedItem) {\n    if (!selectedItem) {\n      return;\n    }\n\n    var nodeToSelect = this._dataAdapter.getNodeByItem(selectedItem);\n\n    this._dataAdapter.toggleSelection(nodeToSelect.internalFields.key, true);\n  },\n  _renderSelectedItem: function _renderSelectedItem() {\n    var selectedKeys = this._dataAdapter.getSelectedNodesKeys(),\n        selectedKey = selectedKeys.length && selectedKeys[0],\n        selectedItem = this.option(\"selectedItem\");\n\n    if (!selectedKey) {\n      this._selectByItem(selectedItem);\n\n      return;\n    }\n\n    var node = this._dataAdapter.getNodeByKey(selectedKey);\n\n    if (false === node.selectable) {\n      return;\n    }\n\n    if (!selectedItem) {\n      this.option(\"selectedItem\", node.internalFields.item);\n      return;\n    }\n\n    if (selectedItem !== node.internalFields.item) {\n      this._dataAdapter.toggleSelection(selectedKey, false);\n\n      this._selectByItem(selectedItem);\n    }\n  },\n  _initActions: commonUtils.noop,\n  _initMarkup: function _initMarkup() {\n    this.callBase();\n\n    this._addCustomCssClass(this.$element());\n\n    this.option(\"useInkRipple\") && this._renderInkRipple();\n  },\n  _renderInkRipple: function _renderInkRipple() {\n    this._inkRipple = inkRipple.render();\n  },\n  _toggleActiveState: function _toggleActiveState($element, value, e) {\n    this.callBase.apply(this, arguments);\n\n    if (!this._inkRipple) {\n      return;\n    }\n\n    var config = {\n      element: $element,\n      event: e\n    };\n\n    if (value) {\n      this._inkRipple.showWave(config);\n    } else {\n      this._inkRipple.hideWave(config);\n    }\n  },\n  _getShowSubmenuMode: function _getShowSubmenuMode() {\n    var defaultValue = \"onClick\",\n        optionValue = this.option(\"showSubmenuMode\");\n    optionValue = typeUtils.isObject(optionValue) ? optionValue.name : optionValue;\n    return this._isDesktopDevice() ? optionValue : defaultValue;\n  },\n  _initSelectedItems: commonUtils.noop,\n  _isDesktopDevice: function _isDesktopDevice() {\n    return \"desktop\" === devices.real().deviceType;\n  },\n  _initEditStrategy: function _initEditStrategy() {\n    var Strategy = MenuBaseEditStrategy;\n    this._editStrategy = new Strategy(this);\n  },\n  _addCustomCssClass: function _addCustomCssClass($element) {\n    $element.addClass(this.option(\"cssClass\"));\n  },\n  _itemWrapperSelector: function _itemWrapperSelector() {\n    return \".\" + DX_MENU_ITEM_WRAPPER_CLASS;\n  },\n  _hoverStartHandler: function _hoverStartHandler(e) {\n    var that = this,\n        $itemElement = that._getItemElementByEventArgs(e);\n\n    if (!$itemElement || that._isItemDisabled($itemElement)) {\n      return;\n    }\n\n    e.stopPropagation();\n\n    if (\"onHover\" === that._getShowSubmenuMode()) {\n      clearTimeout(this._showSubmenusTimeout);\n      this._showSubmenusTimeout = setTimeout(that._showSubmenu.bind(that, $itemElement), that._getSubmenuDelay(\"show\"));\n    }\n  },\n  _getAvailableItems: function _getAvailableItems($itemElements) {\n    return this.callBase($itemElements).filter(function () {\n      return \"hidden\" !== $(this).css(\"visibility\");\n    });\n  },\n  _isItemDisabled: function _isItemDisabled($item) {\n    return this._disabledGetter($item.data(this._itemDataKey()));\n  },\n  _showSubmenu: function _showSubmenu($itemElement) {\n    this._addExpandedClass($itemElement);\n  },\n  _addExpandedClass: function _addExpandedClass(itemElement) {\n    $(itemElement).addClass(DX_MENU_ITEM_EXPANDED_CLASS);\n  },\n  _getSubmenuDelay: function _getSubmenuDelay(action) {\n    var delay = this.option(\"showSubmenuMode\").delay;\n\n    if (!typeUtils.isDefined(delay)) {\n      return DEFAULT_DELAY[action];\n    }\n\n    return typeUtils.isObject(delay) ? delay[action] : delay;\n  },\n  _getItemElementByEventArgs: function _getItemElementByEventArgs(eventArgs) {\n    var $target = $(eventArgs.target);\n\n    if ($target.hasClass(this._itemClass()) || $target.get(0) === eventArgs.currentTarget) {\n      return $target;\n    }\n\n    while (!$target.hasClass(this._itemClass())) {\n      $target = $target.parent();\n\n      if ($target.hasClass(\"dx-submenu\")) {\n        return null;\n      }\n    }\n\n    return $target;\n  },\n  _hoverEndHandler: function _hoverEndHandler() {\n    clearTimeout(this._showSubmenusTimeout);\n  },\n  _hasSubmenu: function _hasSubmenu(node) {\n    return node.internalFields.childrenKeys.length;\n  },\n  _renderContentImpl: function _renderContentImpl() {\n    this._renderItems(this._dataAdapter.getRootNodes());\n  },\n  _renderItems: function _renderItems(nodes, submenuContainer) {\n    var $nodeContainer,\n        that = this;\n\n    if (nodes.length) {\n      this.hasIcons = false;\n      $nodeContainer = this._renderContainer(this.$element(), submenuContainer);\n      var firstVisibleIndex = -1,\n          nextGroupFirstIndex = -1;\n      each(nodes, function (index, node) {\n        var isVisibleNode = false !== node.visible;\n\n        if (isVisibleNode && firstVisibleIndex < 0) {\n          firstVisibleIndex = index;\n        }\n\n        var isBeginGroup = firstVisibleIndex < index && (node.beginGroup || index === nextGroupFirstIndex);\n\n        if (isBeginGroup) {\n          nextGroupFirstIndex = isVisibleNode ? index : index + 1;\n        }\n\n        if (index === nextGroupFirstIndex && firstVisibleIndex < index) {\n          that._renderSeparator($nodeContainer);\n        }\n\n        that._renderItem(index, node, $nodeContainer);\n      });\n\n      if (!this.hasIcons) {\n        $nodeContainer.addClass(DX_MENU_NO_ICONS_CLASS);\n      }\n    }\n  },\n  _renderContainer: function _renderContainer($wrapper) {\n    return $(\"<ul>\").appendTo($wrapper).addClass(DX_MENU_ITEMS_CONTAINER_CLASS);\n  },\n  _createDOMElement: function _createDOMElement($nodeContainer) {\n    var $node = $(\"<li>\").appendTo($nodeContainer).addClass(DX_MENU_ITEM_WRAPPER_CLASS);\n    return $node;\n  },\n  _renderItem: function _renderItem(index, node, $nodeContainer, $nodeElement) {\n    var $itemFrame,\n        items = this.option(\"items\");\n\n    if (false === node.internalFields.item.visible) {\n      return;\n    }\n\n    var $node = $nodeElement || this._createDOMElement($nodeContainer);\n\n    if (items[index + 1] && items[index + 1].beginGroup) {\n      $node.addClass(DX_MENU_ITEM_LAST_GROUP_ITEM);\n    }\n\n    $itemFrame = this.callBase(index, node.internalFields.item, $node);\n\n    if (node.internalFields.item === this.option(\"selectedItem\")) {\n      $itemFrame.addClass(DX_MENU_SELECTED_ITEM_CLASS);\n    }\n\n    $itemFrame.attr(\"tabIndex\", -1);\n\n    if (this._hasSubmenu(node)) {\n      this.setAria(\"haspopup\", \"true\", $itemFrame);\n    }\n  },\n  _renderItemFrame: function _renderItemFrame(index, itemData, $itemContainer) {\n    var $itemFrame = $itemContainer.children(\".\" + ITEM_CLASS);\n    return $itemFrame.length ? $itemFrame : this.callBase.apply(this, arguments);\n  },\n  _refreshItem: function _refreshItem($item, item) {\n    var node = this._dataAdapter.getNodeByItem(item),\n        index = $item.data(this._itemIndexKey()),\n        $nodeContainer = $item.closest(\"ul\"),\n        $nodeElement = $item.closest(\"li\");\n\n    this._renderItem(index, node, $nodeContainer, $nodeElement);\n  },\n  _addContentClasses: function _addContentClasses(itemData, $itemFrame) {\n    var hasText = itemData.text ? !!itemData.text.length : false,\n        hasIcon = !!itemData.icon,\n        hasSubmenu = itemData.items ? !!itemData.items.length : false;\n    $itemFrame.toggleClass(DX_ITEM_HAS_TEXT, hasText);\n    $itemFrame.toggleClass(DX_ITEM_HAS_ICON, hasIcon);\n\n    if (!this.hasIcons) {\n      this.hasIcons = hasIcon;\n    }\n\n    $itemFrame.toggleClass(DX_ITEM_HAS_SUBMENU, hasSubmenu);\n  },\n  _getItemContent: function _getItemContent($itemFrame) {\n    var $itemContent = this.callBase($itemFrame);\n\n    if (!$itemContent.length) {\n      $itemContent = $itemFrame.children(\".\" + DX_ITEM_CONTENT_CLASS);\n    }\n\n    return $itemContent;\n  },\n  _postprocessRenderItem: function _postprocessRenderItem(args) {\n    var node,\n        $itemElement = $(args.itemElement),\n        selectedIndex = this._dataAdapter.getSelectedNodesKeys();\n\n    if (!selectedIndex.length || !this._selectedGetter(args.itemData) || !this._isItemSelectable(args.itemData)) {\n      this._setAriaSelected($itemElement, \"false\");\n\n      return;\n    }\n\n    node = this._dataAdapter.getNodeByItem(args.itemData);\n\n    if (node.internalFields.key === selectedIndex[0]) {\n      $itemElement.addClass(this._selectedItemClass());\n\n      this._setAriaSelected($itemElement, \"true\");\n    } else {\n      this._setAriaSelected($itemElement, \"false\");\n    }\n  },\n  _isItemSelectable: function _isItemSelectable(item) {\n    return false !== item.selectable;\n  },\n  _renderSeparator: function _renderSeparator($itemsContainer) {\n    $(\"<li>\").appendTo($itemsContainer).addClass(DX_MENU_SEPARATOR_CLASS);\n  },\n  _itemClickHandler: function _itemClickHandler(e) {\n    if (e._skipHandling) {\n      return;\n    }\n\n    var itemClickActionHandler = this._createAction(this._updateSubmenuVisibilityOnClick.bind(this));\n\n    this._itemDXEventHandler(e, \"onItemClick\", {}, {\n      afterExecute: itemClickActionHandler.bind(this)\n    });\n\n    e._skipHandling = true;\n  },\n  _updateSubmenuVisibilityOnClick: function _updateSubmenuVisibilityOnClick(actionArgs) {\n    this._updateSelectedItemOnClick(actionArgs);\n\n    if (\"onClick\" === this._getShowSubmenuMode()) {\n      this._addExpandedClass(actionArgs.args[0].itemElement);\n    }\n  },\n  _updateSelectedItemOnClick: function _updateSelectedItemOnClick(actionArgs) {\n    var selectedItemKey,\n        args = actionArgs.args ? actionArgs.args[0] : actionArgs;\n\n    if (!this._isItemSelectionAllowed(args.itemData)) {\n      return;\n    }\n\n    selectedItemKey = this._dataAdapter.getSelectedNodesKeys();\n\n    var selectedNode = selectedItemKey.length && this._dataAdapter.getNodeByKey(selectedItemKey[0]);\n\n    if (selectedNode) {\n      this._toggleItemSelection(selectedNode, false);\n    }\n\n    if (!selectedNode || selectedNode.internalFields.item !== args.itemData) {\n      this.selectItem(args.itemData);\n    } else {\n      this._fireSelectionChangeEvent(null, this.option(\"selectedItem\"));\n\n      this._setOptionSilent(\"selectedItem\", null);\n    }\n  },\n  _isItemSelectionAllowed: function _isItemSelectionAllowed(item) {\n    var isSelectionByClickEnabled = this._isSelectionEnabled() && this.option(\"selectByClick\");\n    return !this._isContainerEmpty() && isSelectionByClickEnabled && this._isItemSelectable(item) && !this._itemsGetter(item);\n  },\n  _isContainerEmpty: function _isContainerEmpty() {\n    return this._itemContainer().is(\":empty\");\n  },\n  _syncSelectionOptions: commonUtils.asyncNoop,\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"showSubmenuMode\":\n        break;\n\n      case \"selectedItem\":\n        var itemData = args.value,\n            node = this._dataAdapter.getNodeByItem(itemData),\n            selectedKey = this._dataAdapter.getSelectedNodesKeys()[0];\n\n        if (node && node.internalFields.key !== selectedKey) {\n          if (false === node.selectable) {\n            break;\n          }\n\n          if (selectedKey) {\n            this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false);\n          }\n\n          this._toggleItemSelection(node, true);\n\n          this._updateSelectedItems();\n        }\n\n        break;\n\n      case \"cssClass\":\n      case \"position\":\n      case \"selectByClick\":\n      case \"animation\":\n      case \"useInkRipple\":\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _toggleItemSelection: function _toggleItemSelection(node, value) {\n    var itemElement = this._getElementByItem(node.internalFields.item);\n\n    itemElement && $(itemElement).toggleClass(DX_MENU_SELECTED_ITEM_CLASS);\n\n    this._dataAdapter.toggleSelection(node.internalFields.key, value);\n  },\n  _getElementByItem: function _getElementByItem(itemData) {\n    var result,\n        that = this;\n    each(this._itemElements(), function (_, itemElement) {\n      if ($(itemElement).data(that._itemDataKey()) !== itemData) {\n        return true;\n      }\n\n      result = itemElement;\n      return false;\n    });\n    return result;\n  },\n  _updateSelectedItems: function _updateSelectedItems(oldSelection, newSelection) {\n    if (oldSelection || newSelection) {\n      this._updateSelection(newSelection, oldSelection);\n\n      this._fireSelectionChangeEvent(newSelection, oldSelection);\n    }\n  },\n  _fireSelectionChangeEvent: function _fireSelectionChangeEvent(addedSelection, removedSelection) {\n    this._createActionByOption(\"onSelectionChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    })({\n      addedItems: [addedSelection],\n      removedItems: [removedSelection]\n    });\n  },\n  selectItem: function selectItem(itemElement) {\n    var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\n        node = this._dataAdapter.getNodeByItem(itemData),\n        selectedKey = this._dataAdapter.getSelectedNodesKeys()[0],\n        selectedItem = this.option(\"selectedItem\");\n\n    if (node.internalFields.key !== selectedKey) {\n      if (selectedKey) {\n        this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false);\n      }\n\n      this._toggleItemSelection(node, true);\n\n      this._updateSelectedItems(selectedItem, itemData);\n\n      this._setOptionSilent(\"selectedItem\", itemData);\n    }\n  },\n  unselectItem: function unselectItem(itemElement) {\n    var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\n        node = this._dataAdapter.getNodeByItem(itemData),\n        selectedItem = this.option(\"selectedItem\");\n\n    if (node.internalFields.selected) {\n      this._toggleItemSelection(node, false);\n\n      this._updateSelectedItems(selectedItem, null);\n\n      this._setOptionSilent(\"selectedItem\", null);\n    }\n  }\n});\nmodule.exports = MenuBase;","/**\r\n * DevExtreme (ui/context_menu/ui.context_menu.js)\r\n * Version: 19.1.4\r\n * Build date: Mon Jun 17 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\"),\n    domAdapter = require(\"../../core/dom_adapter\"),\n    eventsEngine = require(\"../../events/core/events_engine\"),\n    Guid = require(\"../../core/guid\"),\n    registerComponent = require(\"../../core/component_registrator\"),\n    noop = require(\"../../core/utils/common\").noop,\n    typeUtils = require(\"../../core/utils/type\"),\n    domUtils = require(\"../../core/utils/dom\"),\n    contains = domUtils.contains,\n    getPublicElement = domUtils.getPublicElement,\n    each = require(\"../../core/utils/iterator\").each,\n    inArray = require(\"../../core/utils/array\").inArray,\n    extend = require(\"../../core/utils/extend\").extend,\n    windowUtils = require(\"../../core/utils/window\"),\n    fx = require(\"../../animation/fx\"),\n    positionUtils = require(\"../../animation/position\"),\n    devices = require(\"../../core/devices\"),\n    eventUtils = require(\"../../events/utils\"),\n    Overlay = require(\"../overlay\"),\n    MenuBase = require(\"./ui.menu_base\"),\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\n\nvar DX_MENU_CLASS = \"dx-menu\",\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\n    DX_MENU_PHONE_CLASS = \"dx-menu-phone-overlay\",\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\n    DX_MENU_ITEM_WRAPPER_CLASS = DX_MENU_ITEM_CLASS + \"-wrapper\",\n    DX_SUBMENU_CLASS = \"dx-submenu\",\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\n    DX_HAS_CONTEXT_MENU_CLASS = \"dx-has-context-menu\",\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\n    FOCUS_UP = \"up\",\n    FOCUS_DOWN = \"down\",\n    FOCUS_LEFT = \"left\",\n    FOCUS_RIGHT = \"right\",\n    FOCUS_FIRST = \"first\",\n    FOCUS_LAST = \"last\",\n    ACTIONS = [\"onShowing\", \"onShown\", \"onSubmenuCreated\", \"onHiding\", \"onHidden\", \"onPositioning\", \"onLeftFirstItem\", \"onLeftLastItem\", \"onCloseRootSubmenu\", \"onExpandLastSubmenu\"],\n    LOCAL_SUBMENU_DIRECTIONS = [FOCUS_UP, FOCUS_DOWN, FOCUS_FIRST, FOCUS_LAST],\n    DEFAULT_SHOW_EVENT = \"dxcontextmenu\";\nvar ContextMenu = MenuBase.inherit(function () {\n  var getShowEvent = function getShowEvent(that) {\n    var result = null,\n        optionValue = that.option(\"showEvent\");\n\n    if (typeUtils.isObject(optionValue)) {\n      if (null !== optionValue.name) {\n        result = optionValue.name || DEFAULT_SHOW_EVENT;\n      }\n    } else {\n      result = optionValue;\n    }\n\n    return result;\n  },\n      getShowDelay = function getShowDelay(that) {\n    var optionValue = that.option(\"showEvent\");\n    return typeUtils.isObject(optionValue) && optionValue.delay;\n  };\n\n  return {\n    _getDefaultOptions: function _getDefaultOptions() {\n      return extend(this.callBase(), {\n        showEvent: DEFAULT_SHOW_EVENT,\n        closeOnOutsideClick: true,\n        position: {\n          at: \"top left\",\n          my: \"top left\"\n        },\n        onShowing: null,\n        onShown: null,\n        onSubmenuCreated: null,\n        onHiding: null,\n        onHidden: null,\n        onPositioning: null,\n        submenuDirection: \"auto\",\n        visible: false,\n        target: void 0,\n        onLeftFirstItem: null,\n        onLeftLastItem: null,\n        onCloseRootSubmenu: null,\n        onExpandLastSubmenu: null\n      });\n    },\n    _defaultOptionsRules: function _defaultOptionsRules() {\n      return this.callBase().concat([{\n        device: function device() {\n          return !windowUtils.hasWindow();\n        },\n        options: {\n          animation: null\n        }\n      }]);\n    },\n    _initActions: function _initActions() {\n      this._actions = {};\n      each(ACTIONS, function (index, action) {\n        this._actions[action] = this._createActionByOption(action) || noop;\n      }.bind(this));\n    },\n    _setOptionsByReference: function _setOptionsByReference() {\n      this.callBase();\n      extend(this._optionsByReference, {\n        animation: true,\n        selectedItem: true\n      });\n    },\n    _focusInHandler: noop,\n    _itemContainer: function _itemContainer() {\n      return this._overlay ? this._overlay.$content() : $();\n    },\n    _eventBindingTarget: function _eventBindingTarget() {\n      return this._itemContainer();\n    },\n    itemsContainer: function itemsContainer() {\n      return this._overlay ? this._overlay.$content() : void 0;\n    },\n    _supportedKeys: function _supportedKeys() {\n      var selectItem = function selectItem() {\n        var $item = $(this.option(\"focusedElement\"));\n        this.hide();\n\n        if (!$item.length || !this._isSelectionEnabled()) {\n          return;\n        }\n\n        this.selectItem($item[0]);\n      };\n\n      return extend(this.callBase(), {\n        space: selectItem,\n        esc: this.hide\n      });\n    },\n    _getActiveItem: function _getActiveItem() {\n      var $items = this._getAvailableItems(),\n          $focusedItem = $items.filter(\".dx-state-focused\"),\n          $hoveredItem = $items.filter(\".dx-state-hover\"),\n          $hoveredItemContainer = $hoveredItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS);\n\n      if ($hoveredItemContainer.find(\".\" + DX_MENU_ITEM_CLASS).index($focusedItem) >= 0) {\n        return $focusedItem;\n      }\n\n      if ($hoveredItem.length) {\n        return $hoveredItem;\n      }\n\n      return this.callBase();\n    },\n    _moveFocus: function _moveFocus(location) {\n      var $newTarget,\n          $items = this._getItemsByLocation(location),\n          $oldTarget = this._getActiveItem(true),\n          $hoveredItem = this.itemsContainer().find(\".dx-state-hover\"),\n          $focusedItem = $(this.option(\"focusedElement\")),\n          $activeItemHighlighted = !!($focusedItem.length || $hoveredItem.length);\n\n      switch (location) {\n        case FOCUS_UP:\n          $newTarget = $activeItemHighlighted ? this._prevItem($items) : $oldTarget;\n\n          if ($oldTarget.is($items.first())) {\n            this._actions.onLeftFirstItem($oldTarget);\n          }\n\n          break;\n\n        case FOCUS_DOWN:\n          $newTarget = $activeItemHighlighted ? this._nextItem($items) : $oldTarget;\n\n          if ($oldTarget.is($items.last())) {\n            this._actions.onLeftLastItem($oldTarget);\n          }\n\n          break;\n\n        case FOCUS_RIGHT:\n          $newTarget = this.option(\"rtlEnabled\") ? this._hideSubmenuHandler() : this._expandSubmenuHandler($items, location);\n          break;\n\n        case FOCUS_LEFT:\n          $newTarget = this.option(\"rtlEnabled\") ? this._expandSubmenuHandler($items, location) : this._hideSubmenuHandler();\n          break;\n\n        case FOCUS_FIRST:\n          $newTarget = $items.first();\n          break;\n\n        case FOCUS_LAST:\n          $newTarget = $items.last();\n          break;\n\n        default:\n          return this.callBase(location);\n      }\n\n      if (0 !== $newTarget.length) {\n        this.option(\"focusedElement\", getPublicElement($newTarget));\n      }\n    },\n    _getItemsByLocation: function _getItemsByLocation(location) {\n      var $items,\n          $activeItem = this._getActiveItem(true);\n\n      if (inArray(location, LOCAL_SUBMENU_DIRECTIONS) >= 0) {\n        $items = $activeItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).children().children();\n      }\n\n      $items = this._getAvailableItems($items);\n      return $items;\n    },\n    _getAriaTarget: function _getAriaTarget() {\n      return this.$element();\n    },\n    _refreshActiveDescendant: function _refreshActiveDescendant() {\n      if (!this._overlay) {\n        return;\n      }\n\n      var id = this.getFocusedItemId();\n      this.setAria(\"activedescendant\", \"\", this._overlay.$content());\n      this.setAria(\"activedescendant\", id, this._overlay.$content());\n    },\n    _hideSubmenuHandler: function _hideSubmenuHandler() {\n      var $curItem = this._getActiveItem(true),\n          $parentItem = $curItem.parents(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).first();\n\n      if ($parentItem.length) {\n        this._hideSubmenusOnSameLevel($parentItem);\n\n        this._hideSubmenu($curItem.closest(\".\" + DX_SUBMENU_CLASS));\n\n        return $parentItem;\n      }\n\n      this._actions.onCloseRootSubmenu($curItem);\n\n      return $curItem;\n    },\n    _expandSubmenuHandler: function _expandSubmenuHandler($items, location) {\n      var $curItem = this._getActiveItem(true),\n          itemData = this._getItemData($curItem),\n          node = this._dataAdapter.getNodeByItem(itemData),\n          isItemHasSubmenu = this._hasSubmenu(node),\n          $submenu = $curItem.children(\".\" + DX_SUBMENU_CLASS);\n\n      if (isItemHasSubmenu && !$curItem.hasClass(DX_STATE_DISABLED_CLASS)) {\n        if (!$submenu.length || \"hidden\" === $submenu.css(\"visibility\")) {\n          this._showSubmenu($curItem);\n        }\n\n        return this._nextItem(this._getItemsByLocation(location));\n      }\n\n      this._actions.onExpandLastSubmenu($curItem);\n\n      return $curItem;\n    },\n    _clean: function _clean() {\n      if (this._overlay) {\n        this._overlay.$element().remove();\n\n        this._overlay = null;\n      }\n\n      this._detachShowContextMenuEvents(this._getTarget());\n\n      this.callBase();\n    },\n    _initMarkup: function _initMarkup() {\n      this.$element().addClass(DX_HAS_CONTEXT_MENU_CLASS);\n      this.callBase();\n    },\n    _render: function _render() {\n      this.callBase();\n\n      this._renderVisibility(this.option(\"visible\"));\n\n      this._addWidgetClass();\n    },\n    _renderContentImpl: function _renderContentImpl() {\n      this._detachShowContextMenuEvents(this._getTarget());\n\n      this._attachShowContextMenuEvents();\n    },\n    _attachKeyboardEvents: function _attachKeyboardEvents() {\n      !this._keyboardProcessor && this._focusTarget().length && this.callBase();\n    },\n    _renderContextMenuOverlay: function _renderContextMenuOverlay() {\n      if (this._overlay) {\n        return;\n      }\n\n      var $overlayContent,\n          overlayOptions = this._getOverlayOptions(),\n          $overlayElement = $(\"<div>\");\n\n      this._overlay = this._createComponent($overlayElement.appendTo(this._$element), Overlay, overlayOptions);\n      $overlayContent = this._overlay.$content();\n      $overlayContent.addClass(DX_CONTEXT_MENU_CLASS);\n\n      this._addCustomCssClass($overlayContent);\n\n      this._addPlatformDependentClass($overlayContent);\n\n      this._attachContextMenuEvent();\n    },\n    _itemContextMenuHandler: function _itemContextMenuHandler(e) {\n      this.callBase(e);\n      e.stopPropagation();\n    },\n    _addPlatformDependentClass: function _addPlatformDependentClass($element) {\n      if (devices.current().phone) {\n        $element.addClass(DX_MENU_PHONE_CLASS);\n      }\n    },\n    _detachShowContextMenuEvents: function _detachShowContextMenuEvents(target) {\n      var eventName,\n          showEvent = getShowEvent(this);\n\n      if (!showEvent) {\n        return;\n      }\n\n      eventName = eventUtils.addNamespace(showEvent, this.NAME);\n\n      if (this._showContextMenuEventHandler) {\n        eventsEngine.off(domAdapter.getDocument(), eventName, target, this._showContextMenuEventHandler);\n      } else {\n        eventsEngine.off($(target), eventName);\n      }\n    },\n    _attachShowContextMenuEvents: function _attachShowContextMenuEvents() {\n      var delay,\n          handler,\n          eventName,\n          contextMenuAction,\n          that = this,\n          target = that._getTarget(),\n          showEvent = getShowEvent(that);\n\n      if (!showEvent) {\n        return;\n      }\n\n      eventName = eventUtils.addNamespace(showEvent, that.NAME);\n      contextMenuAction = that._createAction(function (e) {\n        delay = getShowDelay(that);\n\n        if (delay) {\n          setTimeout(function () {\n            that._show(e.event);\n          }, delay);\n        } else {\n          that._show(e.event);\n        }\n      }.bind(that), {\n        validatingTargetName: \"target\"\n      });\n\n      handler = function handler(e) {\n        contextMenuAction({\n          event: e,\n          target: $(e.currentTarget)\n        });\n      };\n\n      contextMenuAction = that._createAction(contextMenuAction);\n\n      if (typeUtils.isRenderer(target) || target.nodeType || typeUtils.isWindow(target)) {\n        that._showContextMenuEventHandler = void 0;\n        eventsEngine.on(target, eventName, handler);\n      } else {\n        that._showContextMenuEventHandler = handler;\n        eventsEngine.on(domAdapter.getDocument(), eventName, target, that._showContextMenuEventHandler);\n      }\n    },\n    _hoverEndHandler: function _hoverEndHandler(e) {\n      this.callBase(e);\n      e.stopPropagation();\n    },\n    _renderDimensions: noop,\n    _renderContainer: function _renderContainer($wrapper, submenuContainer) {\n      var $itemsContainer,\n          $holder = submenuContainer || this._itemContainer();\n\n      $wrapper = $(\"<div>\");\n      $wrapper.appendTo($holder).addClass(DX_SUBMENU_CLASS).css(\"visibility\", submenuContainer ? \"hidden\" : \"visible\");\n      $itemsContainer = this.callBase($wrapper);\n\n      if (submenuContainer) {\n        return $itemsContainer;\n      }\n\n      if (this.option(\"width\")) {\n        return $itemsContainer.css(\"minWidth\", this.option(\"width\"));\n      }\n\n      if (this.option(\"height\")) {\n        return $itemsContainer.css(\"minHeight\", this.option(\"height\"));\n      }\n\n      return $itemsContainer;\n    },\n    _renderSubmenuItems: function _renderSubmenuItems(node, $itemFrame) {\n      this._renderItems(this._getChildNodes(node), $itemFrame);\n\n      this._actions.onSubmenuCreated({\n        itemElement: getPublicElement($itemFrame),\n        itemData: node.internalFields.item,\n        submenuElement: getPublicElement($itemFrame.children(\".\" + DX_SUBMENU_CLASS))\n      });\n    },\n    _getOverlayOptions: function _getOverlayOptions() {\n      var position = this.option(\"position\"),\n          overlayAnimation = this.option(\"animation\"),\n          overlayOptions = {\n        focusStateEnabled: this.option(\"focusStateEnabled\"),\n        animation: overlayAnimation,\n        innerOverlay: true,\n        closeOnOutsideClick: this._closeOnOutsideClickHandler.bind(this),\n        propagateOutsideClick: true,\n        closeOnTargetScroll: true,\n        deferRendering: false,\n        position: {\n          at: position.at,\n          my: position.my,\n          of: this._getTarget(),\n          collision: \"flipfit\"\n        },\n        shading: false,\n        showTitle: false,\n        height: \"auto\",\n        width: \"auto\",\n        onShown: this._overlayShownActionHandler.bind(this),\n        onHiding: this._overlayHidingActionHandler.bind(this),\n        onHidden: this._overlayHiddenActionHandler.bind(this)\n      };\n      return overlayOptions;\n    },\n    _overlayShownActionHandler: function _overlayShownActionHandler(arg) {\n      this._actions.onShown(arg);\n    },\n    _overlayHidingActionHandler: function _overlayHidingActionHandler(arg) {\n      this._actions.onHiding(arg);\n\n      if (!arg.cancel) {\n        this._hideAllShownSubmenus();\n\n        this._setOptionSilent(\"visible\", false);\n      }\n    },\n    _overlayHiddenActionHandler: function _overlayHiddenActionHandler(arg) {\n      this._actions.onHidden(arg);\n    },\n    _closeOnOutsideClickHandler: function _closeOnOutsideClickHandler(e) {\n      var $clickedItem,\n          $activeItemContainer,\n          $itemContainers,\n          $rootItem,\n          isRootItemClicked,\n          isInnerOverlayClicked,\n          closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\n\n      if (typeUtils.isFunction(closeOnOutsideClick)) {\n        return closeOnOutsideClick(e);\n      }\n\n      if (!closeOnOutsideClick) {\n        return false;\n      }\n\n      if (domAdapter.isDocument(e.target)) {\n        return true;\n      }\n\n      $activeItemContainer = this._getActiveItemsContainer(e.target);\n      $itemContainers = this._getItemsContainers();\n      $clickedItem = this._searchActiveItem(e.target);\n      $rootItem = this.$element().parents(\".\" + DX_MENU_ITEM_CLASS);\n      isRootItemClicked = $clickedItem[0] === $rootItem[0] && $clickedItem.length && $rootItem.length;\n      isInnerOverlayClicked = this._isIncludeOverlay($activeItemContainer, $itemContainers) && $clickedItem.length;\n\n      if (isInnerOverlayClicked || isRootItemClicked) {\n        if (\"onClick\" === this._getShowSubmenuMode()) {\n          this._hideAllShownChildSubmenus($clickedItem);\n        }\n\n        return false;\n      }\n\n      return true;\n    },\n    _getActiveItemsContainer: function _getActiveItemsContainer(target) {\n      return $(target).closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS);\n    },\n    _getItemsContainers: function _getItemsContainers() {\n      return this._overlay._$content.find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS);\n    },\n    _searchActiveItem: function _searchActiveItem(target) {\n      return $(target).closest(\".\" + DX_MENU_ITEM_CLASS).eq(0);\n    },\n    _isIncludeOverlay: function _isIncludeOverlay($activeOverlay, $allOverlays) {\n      var isSame = false;\n      each($allOverlays, function (index, $overlay) {\n        if ($activeOverlay.is($overlay) && !isSame) {\n          isSame = true;\n        }\n      });\n      return isSame;\n    },\n    _hideAllShownChildSubmenus: function _hideAllShownChildSubmenus($clickedItem) {\n      var $context,\n          that = this,\n          $submenuElements = $clickedItem.find(\".\" + DX_SUBMENU_CLASS),\n          shownSubmenus = extend([], this._shownSubmenus);\n\n      if ($submenuElements.length > 0) {\n        each(shownSubmenus, function (index, $submenu) {\n          $context = that._searchActiveItem($submenu.context).parent();\n\n          if ($context.parent().is($clickedItem.parent().parent()) && !$context.is($clickedItem.parent())) {\n            that._hideSubmenu($submenu);\n          }\n        });\n      }\n    },\n    _showSubmenu: function _showSubmenu($item) {\n      var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\n\n      this._hideSubmenusOnSameLevel($item);\n\n      if (!this._hasSubmenu(node)) {\n        return;\n      }\n\n      var $submenu = $item.children(\".\" + DX_SUBMENU_CLASS),\n          isSubmenuRendered = $submenu.length;\n      this.callBase($item);\n\n      if (!isSubmenuRendered) {\n        this._renderSubmenuItems(node, $item);\n      }\n\n      if (!this._isSubmenuVisible($submenu)) {\n        this._drawSubmenu($item);\n      }\n    },\n    _hideSubmenusOnSameLevel: function _hideSubmenusOnSameLevel($item) {\n      var $expandedItems = $item.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS).siblings().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\n\n      if ($expandedItems.length) {\n        $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\n\n        this._hideSubmenu($expandedItems.find(\".\" + DX_SUBMENU_CLASS));\n      }\n    },\n    _hideSubmenuGroup: function _hideSubmenuGroup($submenu) {\n      if (this._isSubmenuVisible($submenu)) {\n        this._hideSubmenuCore($submenu);\n      }\n    },\n    _isSubmenuVisible: function _isSubmenuVisible($submenu) {\n      return \"visible\" === $submenu.css(\"visibility\");\n    },\n    _drawSubmenu: function _drawSubmenu($itemElement) {\n      var animation = this.option(\"animation\") ? this.option(\"animation\").show : {},\n          $submenu = $itemElement.children(\".\" + DX_SUBMENU_CLASS),\n          submenuPosition = this._getSubmenuPosition($itemElement);\n\n      if (this._overlay && this._overlay.option(\"visible\")) {\n        if (!typeUtils.isDefined(this._shownSubmenus)) {\n          this._shownSubmenus = [];\n        }\n\n        if (inArray($submenu, this._shownSubmenus)) {\n          this._shownSubmenus.push($submenu);\n        }\n\n        if (animation) {\n          fx.stop($submenu);\n        }\n\n        positionUtils.setup($submenu, submenuPosition);\n\n        if (animation) {\n          if (typeUtils.isPlainObject(animation.to)) {\n            animation.to.position = submenuPosition;\n          }\n\n          this._animate($submenu, animation);\n        }\n\n        $submenu.css(\"visibility\", \"visible\");\n      }\n    },\n    _animate: function _animate($container, options) {\n      fx.animate($container, options);\n    },\n    _getSubmenuPosition: function _getSubmenuPosition($rootItem) {\n      var submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\n          $rootItemWrapper = $rootItem.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS),\n          position = {\n        collision: \"flip\",\n        of: $rootItemWrapper,\n        offset: {\n          h: 0,\n          v: -1\n        }\n      };\n\n      switch (submenuDirection) {\n        case \"left\":\n          position.at = \"left top\";\n          position.my = \"right top\";\n          break;\n\n        case \"right\":\n          position.at = \"right top\";\n          position.my = \"left top\";\n          break;\n\n        default:\n          if (this.option(\"rtlEnabled\")) {\n            position.at = \"left top\";\n            position.my = \"right top\";\n          } else {\n            position.at = \"right top\";\n            position.my = \"left top\";\n          }\n\n      }\n\n      return position;\n    },\n    _updateSubmenuVisibilityOnClick: function _updateSubmenuVisibilityOnClick(actionArgs) {\n      if (!actionArgs.args.length) {\n        return;\n      }\n\n      var $itemElement = $(actionArgs.args[0].itemElement),\n          itemData = actionArgs.args[0].itemData,\n          node = this._dataAdapter.getNodeByItem(itemData);\n\n      if (!node) {\n        return;\n      }\n\n      var $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS),\n          shouldRenderSubmenu = this._hasSubmenu(node) && !$submenu.length;\n\n      if (shouldRenderSubmenu) {\n        this._renderSubmenuItems(node, $itemElement);\n\n        $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS);\n      }\n\n      if ($itemElement.context === $submenu.context && \"visible\" === $submenu.css(\"visibility\")) {\n        return;\n      }\n\n      var notCloseMenuOnItemClick = itemData && false === itemData.closeMenuOnClick;\n\n      if (!itemData || itemData.disabled || notCloseMenuOnItemClick) {\n        return;\n      }\n\n      this._updateSelectedItemOnClick(actionArgs);\n\n      if (0 === $submenu.length) {\n        var $prevSubmenu = $($itemElement.parents(\".\" + DX_SUBMENU_CLASS)[0]);\n\n        this._hideSubmenu($prevSubmenu);\n\n        if (!actionArgs.canceled && this._overlay && this._overlay.option(\"visible\")) {\n          this.option(\"visible\", false);\n        }\n      } else {\n        if (this._shownSubmenus && this._shownSubmenus.length > 0) {\n          if (this._shownSubmenus[0].is($submenu)) {\n            this._hideSubmenu($submenu);\n          }\n        }\n\n        this._showSubmenu($itemElement);\n      }\n    },\n    _hideSubmenu: function _hideSubmenu($curSubmenu) {\n      var that = this,\n          shownSubmenus = extend([], that._shownSubmenus);\n      each(shownSubmenus, function (index, $submenu) {\n        if ($curSubmenu.is($submenu) || contains($curSubmenu[0], $submenu[0])) {\n          $submenu.parent().removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\n\n          that._hideSubmenuCore($submenu);\n        }\n      });\n    },\n    _hideSubmenuCore: function _hideSubmenuCore($submenu) {\n      var index = inArray($submenu, this._shownSubmenus),\n          animation = this.option(\"animation\") ? this.option(\"animation\").hide : null;\n\n      if (index >= 0) {\n        this._shownSubmenus.splice(index, 1);\n      }\n\n      this._stopAnimate($submenu);\n\n      animation && this._animate($submenu, animation);\n      $submenu.css(\"visibility\", \"hidden\");\n    },\n    _stopAnimate: function _stopAnimate($container) {\n      fx.stop($container, true);\n    },\n    _hideAllShownSubmenus: function _hideAllShownSubmenus() {\n      var that = this,\n          shownSubmenus = extend([], that._shownSubmenus),\n          $expandedItems = this._overlay.$content().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\n\n      $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\n      each(shownSubmenus, function (_, $submenu) {\n        that._hideSubmenu($submenu);\n      });\n    },\n    _visibilityChanged: function _visibilityChanged(visible) {\n      if (visible) {\n        this._renderContentImpl();\n      }\n    },\n    _optionChanged: function _optionChanged(args) {\n      if (inArray(args.name, ACTIONS) > -1) {\n        this._initActions();\n\n        return;\n      }\n\n      switch (args.name) {\n        case \"visible\":\n          this._renderVisibility(args.value);\n\n          break;\n\n        case \"showEvent\":\n        case \"position\":\n        case \"submenuDirection\":\n          this._invalidate();\n\n          break;\n\n        case \"target\":\n          args.previousValue && this._detachShowContextMenuEvents(args.previousValue);\n\n          this._invalidate();\n\n          break;\n\n        case \"closeOnOutsideClick\":\n          break;\n\n        default:\n          this.callBase(args);\n      }\n    },\n    _renderVisibility: function _renderVisibility(showing) {\n      return showing ? this._show() : this._hide();\n    },\n    _toggleVisibility: noop,\n    _show: function _show(event) {\n      var args = {\n        jQEvent: event\n      },\n          promise = new Deferred().reject().promise();\n\n      this._actions.onShowing(args);\n\n      if (args.cancel) {\n        return promise;\n      }\n\n      var position = this._positionContextMenu(event);\n\n      if (position) {\n        if (!this._overlay) {\n          this._renderContextMenuOverlay();\n\n          this._overlay.$content().addClass(this._widgetClass());\n\n          this._renderFocusState();\n\n          this._attachHoverEvents();\n\n          this._attachClickEvent();\n\n          this._renderItems(this._dataAdapter.getRootNodes());\n        }\n\n        this._setOptionSilent(\"visible\", true);\n\n        this._overlay.option(\"position\", position);\n\n        promise = this._overlay.show();\n        event && event.stopPropagation();\n        var id = \"dx-\" + new Guid();\n\n        this._overlay.$content().attr({\n          id: id,\n          role: \"menu\"\n        });\n\n        this.setAria(\"owns\", id);\n      }\n\n      return promise;\n    },\n    _getTarget: function _getTarget() {\n      return this.option(\"target\") || this.option(\"position\").of || $(domAdapter.getDocument());\n    },\n    _getContextMenuPosition: function _getContextMenuPosition() {\n      return extend({}, this.option(\"position\"), {\n        of: this._getTarget()\n      });\n    },\n    _positionContextMenu: function _positionContextMenu(jQEvent) {\n      var actionArgs,\n          position = this._getContextMenuPosition(),\n          isInitialPosition = this._isInitialOptionValue(\"position\"),\n          positioningAction = this._createActionByOption(\"onPositioning\", actionArgs);\n\n      if (jQEvent && jQEvent.preventDefault && isInitialPosition) {\n        position.of = jQEvent;\n      }\n\n      actionArgs = {\n        position: position,\n        event: jQEvent\n      };\n      positioningAction(actionArgs);\n\n      if (actionArgs.cancel) {\n        position = null;\n      } else {\n        if (actionArgs.event) {\n          actionArgs.event.cancel = true;\n          jQEvent.preventDefault();\n        }\n      }\n\n      return position;\n    },\n    _hide: function _hide() {\n      var promise;\n\n      if (this._overlay) {\n        this._overlay.$content().removeAttr(\"id\");\n\n        promise = this._overlay.hide();\n\n        this._setOptionSilent(\"visible\", false);\n      }\n\n      this.setAria(\"owns\", void 0);\n      return promise || new Deferred().reject().promise();\n    },\n    toggle: function toggle(showing) {\n      var visible = this.option(\"visible\");\n      showing = void 0 === showing ? !visible : showing;\n      return this._renderVisibility(showing);\n    },\n    show: function show() {\n      return this.toggle(true);\n    },\n    hide: function hide() {\n      return this.toggle(false);\n    }\n  };\n}());\nregisterComponent(\"dxContextMenu\", ContextMenu);\nmodule.exports = ContextMenu;","/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.edit.strategy.js)\r\n * Version: 19.1.4\r\n * Build date: Mon Jun 17 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar $ = require(\"../../core/renderer\"),\n    map = require(\"../../core/utils/iterator\").map,\n    PlainEditStrategy = require(\"../collection/ui.collection_widget.edit.strategy.plain\");\n\nvar MenuBaseEditStrategy = PlainEditStrategy.inherit({\n  _getPlainItems: function _getPlainItems() {\n    return map(this._collectionWidget.option(\"items\"), function getMenuItems(item) {\n      return item.items ? [item].concat(map(item.items, getMenuItems)) : item;\n    });\n  },\n  _stringifyItem: function _stringifyItem(item) {\n    var that = this;\n    return JSON.stringify(item, function (key, value) {\n      if (\"template\" === key) {\n        return that._getTemplateString(value);\n      }\n\n      return value;\n    });\n  },\n  _getTemplateString: function _getTemplateString(template) {\n    var result;\n\n    if (\"object\" === (\"undefined\" === typeof template ? \"undefined\" : _typeof(template))) {\n      result = $(template).text();\n    } else {\n      result = template.toString();\n    }\n\n    return result;\n  }\n});\nmodule.exports = MenuBaseEditStrategy;"],"sourceRoot":""}